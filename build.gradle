plugins {
	id 'org.springframework.boot' version '2.6.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "io.freefair.lombok" version "6.4.1"
	id "org.flywaydb.flyway" version "9.8.1"
}

group = 'com.wro'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.jetbrains:annotations:20.1.0'
	implementation 'org.springframework.data:spring-data-commons:2.7.3'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'org.postgresql:postgresql:42.5.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework:spring-jdbc:5.3.24'
	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.rest-assured:rest-assured'

}

tasks.named('test') {
	useJUnitPlatform()
}

flyway {
	def props = new Properties()
	def confFile = "src/main/resources/flyway.conf"

	file(confFile).withInputStream {
		stream -> props.load(stream)
	}

	url = props['flyway.url']
	user = props['flyway.user']
	password = props['flyway.password']
	locations = props['flyway.locations']
	schemas = [props['flyway.schemas']]
	locations = props['flyway.locations']
	baselineOnMigrate = props['flyway.baselineOnMigrate']
	cleanDisabled=false

}
